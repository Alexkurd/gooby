#!/usr/bin/env python
# -*- coding: utf-8 -*-


"""
@author: tetra5 <tetra5dotorg@gmail.com>
"""


def camelcase_to_underscore(string):
    """
    Converts CamelCased string to lowercased string with underscores.

    Example: "CamelCase" turns into "camel_case".

    @param string: (string) a string to convert.
    """
    import re

    pattern = "(((?<=[a-z])[A-Z])|([A-Z](?![A-Z]|$)))"
    return re.sub(pattern, "_\\1", string).lower().strip("_")


def retry_on_exception(exception, tries=10, delay=3, backoff=1):
    """Retries a function or method until it stops generating specified
    exception or reach a certain number of tries.

    @param exception: Exception generated by decorated function or method.
    @param tries: Number of tries.
    @param delay: Delay between tries in seconds.
    @param backoff: Factor by which the delay should lengthen after each
    failure.
    """
    from time import sleep

    def wrapper(f):
        def f_retry(*args, **kwargs):
            mtries, mdelay = tries, delay
            while mtries > 0:
                try:
                    return f(*args, **kwargs)
                except exception:
                    sleep(mdelay)
                    mtries -= 1
                    mdelay *= backoff
            return
        return f_retry
    return wrapper
